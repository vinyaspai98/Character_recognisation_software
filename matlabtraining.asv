clc;clear all;close all;

categories = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'aa', 'B', 'bb', 'C', 'cc', 'D', 'dd', 'E', 'ee', 'F', 'ff', 'G', 'gg', 'H', 'hh', 'I', 'ii', 'J', 'jj', 'K', 'kk', 'L', 'll', 'M', 'mm', 'N', 'nn', 'O', 'oo', 'P', 'pp', 'Q', 'qq', 'R', 'rr', 'S', 'ss', 'T', 'tt', 'U', 'uu', 'V', 'vv', 'W', 'ww', 'X', 'xx', 'Y', 'yy', 'Z', 'zz'};

rootFolder = 'G:\rgb';
imds = imageDatastore(fullfile(rootFolder, categories), ...
    'LabelSource', 'foldernames');
varSize = 32;
conv1 = convolution2dLayer(5,varSize,'Padding',2,'BiasLearnRateFactor',2);
conv1.Weights = gpuArray(single(randn([5 5 3 varSize])*0.0001));
fc1 = fullyConnectedLayer(64,'BiasLearnRateFactor',2);
fc1.Weights = gpuArray(single(randn([64 576])*0.1));
fc2 = fullyConnectedLayer(2,'BiasLearnRateFactor',2);
fc2.Weights = gpuArray(single(randn([4 64])*0.1));
layers = [
    imageInputLayer([varSize varSize 3]);
    conv1;
    maxPooling2dLayer(3,'Stride',2);
    reluLayer();
    convolution2dLayer(5,32,'Padding',2,'BiasLearnRateFactor',2);
    reluLayer();
    averagePooling2dLayer(3,'Stride',2);
    convolution2dLayer(5,64,'Padding',2,'BiasLearnRateFactor',2);
    reluLayer();
    averagePooling2dLayer(3,'Stride',2);
    fc1;
    reluLayer();
    fc2;
    softmaxLayer()
    classificationLayer()];

opts = trainingOptions('sgdm', ...
    'InitialLearnRate', 0.001, ...
    'LearnRateSchedule', 'piecewise', ...
    'LearnRateDropFactor', 0.1, ...
    'LearnRateDropPeriod', 8, ...
    'L2Regularization', 0.004, ...
    'MaxEpochs', 10, ...
    'MiniBatchSize', 100, ...
    'Verbose', true);

inputSize = [32 32];
imds.ReadFcn = @(imds)imresize(imread(imds),inputSize);

[net, info] = trainNetwork(imds, layers, opts);